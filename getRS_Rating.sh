#!/bin/bash

set -u

# --- Path Configuration ---
BASE_DIR=.
SCRIPT_DIR=$BASE_DIR/_scripts
INPUT_DIR=$BASE_DIR/_files/RS
OUTPUT_DIR=$BASE_DIR/_files/RS
CHUNK_DIR=$INPUT_DIR/chunks
RESULT_DIR=$OUTPUT_DIR/results

# --- Input Files ---
US_INPUT_ALL=$INPUT_DIR/input_us.txt
JP_INPUT_ALL=$INPUT_DIR/jp_full_list.csv # Generated by the new jp script
IND_TXT=$INPUT_DIR/industries_jp.txt

# --- Final Output Files ---
US_STOCKS_FINAL=$OUTPUT_DIR/rs_stocks_us.csv
US_INDUSTRIES_FINAL=$OUTPUT_DIR/rs_industries_us.csv
JP_STOCKS_FINAL=$OUTPUT_DIR/rs_stocks_jp.csv
JP_INDUSTRIES_FINAL=$OUTPUT_DIR/rs_industries_jp.csv

# --- URLs for List Generation ---
URL1="https://finviz.com/screener.ashx?v=152&f=cap_smallover,ind_stocksonly,sh_price_o7&o=-marketcap&c=0,1,2,3,4,6,7,8,65,67,68"

# --- Script Parameters ---
CHUNK_SIZE=200
WAIT_SECONDS=5

# --- Cleanup and Setup ---
# echo "--- Initializing directories ---"
rm -rf $CHUNK_DIR $RESULT_DIR
mkdir -p $CHUNK_DIR $RESULT_DIR
# Ensure placeholder for industry cache exists
touch "$IND_TXT"
echo

# --- Main Logic ---
start_time=$(date +%s)

# 1. Ticker List Generation
echo "--- Step 1: Generating Ticker Lists ---"
python3 $SCRIPT_DIR/getList_US.py "$US_INPUT_ALL" "$URL1"
# For JP, we need to run the python script in a special mode
JP_RS_MODE=generate_list python3 $SCRIPT_DIR/relative-strength-jp.py "$JP_INPUT_ALL" "$IND_TXT"
# echo "Ticker list generation complete."
echo

# 2. Process US Stocks in Chunks
echo "--- Step 2: Processing US Stocks in Chunks ---"
split -l $CHUNK_SIZE "$US_INPUT_ALL" "$CHUNK_DIR/us_chunk_"
us_chunks=($CHUNK_DIR/us_chunk_*)
# echo "Split US stocks into ${#us_chunks[@]} chunks of $CHUNK_SIZE tickers."

for chunk_file in "${us_chunks[@]}"; do
    chunk_name=$(basename "$chunk_file")
    # echo "Processing US chunk: $chunk_name..."
    python3 "$SCRIPT_DIR/relative-strength-us.py" \
        "$chunk_file" \
        "$RESULT_DIR/stocks_$chunk_name.csv" \
        "$RESULT_DIR/industries_$chunk_name.csv"
    # echo "Waiting for $WAIT_SECONDS seconds..."
    sleep $WAIT_SECONDS
done
# echo "Finished processing all US chunks."
echo

# 3. Process JP Stocks in Chunks
echo "--- Step 3: Processing JP Stocks in Chunks ---"
# Split while preserving header
header=$(head -n 1 "$JP_INPUT_ALL")
tail -n +2 "$JP_INPUT_ALL" | split -l $CHUNK_SIZE - "$CHUNK_DIR/jp_chunk_"
jp_chunks=($CHUNK_DIR/jp_chunk_*)
# echo "Split JP stocks into ${#jp_chunks[@]} chunks of $CHUNK_SIZE tickers."

for chunk_file in "${jp_chunks[@]}"; do
    chunk_name=$(basename "$chunk_file")
    # echo "Processing JP chunk: $chunk_name..."
    # Add header back to the chunk
    tmp_chunk_file="$CHUNK_DIR/${chunk_name}_with_header.csv"
    # echo "$header" > "$tmp_chunk_file"
    cat "$chunk_file" >> "$tmp_chunk_file"

    JP_RS_MODE=process_chunk python3 "$SCRIPT_DIR/relative-strength-jp.py" \
        "$tmp_chunk_file" \
        "$RESULT_DIR/stocks_$chunk_name.csv" \
        "$RESULT_DIR/industries_$chunk_name.csv"

    rm "$tmp_chunk_file"
    # echo "Waiting for $WAIT_SECONDS seconds..."
    sleep $WAIT_SECONDS
done
# echo "Finished processing all JP chunks."
echo

# 4. Combine Chunked Results
echo "--- Step 4: Combining All Results ---"
# Note: These combine scripts need to be present in the SCRIPT_DIR
python3 "$SCRIPT_DIR/combine_results.py" # For US stocks
python3 "$SCRIPT_DIR/combine_jp_results.py" # For JP stocks
echo "Result combination complete."
echo

# --- Finalization ---
end_time=$(date +%s)
run_time=$((end_time - start_time))
echo "--- ALL DONE ---"
echo "Total processing time: $run_time seconds."
